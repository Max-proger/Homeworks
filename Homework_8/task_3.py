"""Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.Примечание: длина списка не фиксирована. Элементы
запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При
этом скрипт завершается, сформированный список выводится на экран. Подсказка: для данного задания примем,
что пользователь может вводить только числа и строки. При вводе пользователем очередного элемента необходимо
реализовать проверку типа элемента и вносить его в список, только если введено число. Класс-исключение должен не
позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не
должна завершаться. """
class NotANumber(ValueError):
    def __init__(self, text):
        self.text = text


def number(num):
    try:
        num = int(num)
        return num
    except ValueError:
        try:
            num = float(num)
            return num
        except ValueError:
            try:
                num = complex(num)
                return num
            except ValueError:
                return False


numbers = []
while True:
    a = input('введите число: ')

    try:
        if a == 'q':
            exit(numbers)
        if not number(a):
            raise NotANumber(f'"\033[93m{a}\033[0m" - не является числом')
    except NotANumber as err:
        print(err)
    else:
        numbers.append(number(a))